# Configurações do banco de dados
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5433/postgres}?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=${POSTGRES_DATABASE_USERNAME:postgres}
spring.datasource.password=${POSTGRES_DATABASE_PASSWORD:docker}


spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

# Serviços externos
analise_financeira.url =${ANALISE_FINANCEIRA_URL:http://localhost:9999/api}
associa_cartao.url =${ASSOCIA_CARTAO_URL:http://localhost:8888/api/cartoes}

# Actuator
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always

# Actuar + Prometheus
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:serviço de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}


## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

# Jaegar
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
opentracing.jaeger.service-name=${propostas_service}
# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

